services:
    users-pg-db:
        image: postgres:16
        container_name: nest-users-pg-db
        restart: always
        ports:
        - "5432:5432"
        environment:
            POSTGRES_USER: ${USERS_POSTGRES_USER}
            POSTGRES_PASSWORD: ${USERS_POSTGRES_PASSWORD}
            POSTGRES_DB: ${USERS_POSTGRES_DB}
        volumes:
            - users-pg-data:/var/lib/postgresql/data
            - ./db/init-scripts:/docker-entrypoint-initdb.d
        networks:
            - commerce-network

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin_container
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
            PGADMIN_CONFIG_SERVER_MODE: "False"
        ports:
            - "${PGADMIN_PORT:-5050}:80"
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        networks:
            - commerce-network

    auth-microservice:
        build: 
            context: ./auth-microservice
            dockerfile: Dockerfile
        container_name: auth_microservice_container
        depends_on:
            - users-microservice
        env_file:
            - .env
        networks:
            - commerce-network
        command: npm run start:dev

    users-microservice:
        build: 
            context: ./users-microservice
            dockerfile: Dockerfile
        container_name: users_microservice_container
        depends_on:
            - users-pg-db
        env_file:
            - .env
        networks:
            - commerce-network
        command: npm run start:dev
        
    api-gateway:
        build: 
            context: ./api-gateway
            dockerfile: Dockerfile
        container_name: api_gateway_container
        depends_on:
            - users-microservice
        env_file:
            - .env
        networks:
            - commerce-network
        ports:
            - '3000:3000'
        command: npm run start:dev

volumes:
    pgadmin_data:
    node_modules:
    users-pg-data:

networks:
    commerce-network:
        driver: bridge
