services:
    users-pg-db:
        image: postgres:16
        container_name: nest-users-pg-db
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: ${USERS_POSTGRES_USER}
            POSTGRES_PASSWORD: ${USERS_POSTGRES_PASSWORD}
            POSTGRES_DB: ${USERS_POSTGRES_DB}
        volumes:
            - users-pg-data:/var/lib/postgresql/data
            - ./db/init-scripts:/docker-entrypoint-initdb.d
        networks:
            - commerce-network
    products-pg-db:
        image: postgres:16
        container_name: nest-products-pg-db
        restart: always
        ports:
            - '5433:5432' 
        environment:
            POSTGRES_USER: ${PRODUCTS_POSTGRES_USER}
            POSTGRES_PASSWORD: ${PRODUCTS_POSTGRES_PASSWORD}
            POSTGRES_DB: ${PRODUCTS_POSTGRES_DB}
        volumes:
            - products-pg-data:/var/lib/postgresql/data
        networks:
            - commerce-network  
    
    orders-pg-db:
        image: postgres:16
        container_name: nest-orders-pg-db
        restart: always
        ports:
            - '5434:5432'
        environment:
            POSTGRES_USER: ${ORDERS_POSTGRES_USER}
            POSTGRES_PASSWORD: ${ORDERS_POSTGRES_PASSWORD}
            POSTGRES_DB: ${ORDERS_POSTGRES_DB}
        volumes:
            - orders-pg-data:/var/lib/postgresql/data
        networks:
            - commerce-network  

    cart-mongo-db:
        image: mongo
        container_name: cart-mongo-db
        restart: always
        ports:
            - '27017:27017'
        volumes:
            - cart-mongo-data:/data/db  
        networks:
            - commerce-network  
    
    shipping-mongo-db:
        image: mongo
        container_name: shipping-mongo-db
        ports:
            - '27019:27017'
        volumes:
            - shipping-mongo-data:/data/db
        networks:
            - commerce-network   

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin_container
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
            PGADMIN_CONFIG_SERVER_MODE: "False"
        ports:
            - "${PGADMIN_PORT:-5050}:80"
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        networks:
            - commerce-network

    zookeeper:
        image: confluentinc/cp-zookeeper:7.5.0
        container_name: zookeeper_container
        ports:
            - "2181:2181"
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181
            - ZOOKEEPER_TICK_TIME=2000
            - ALLOW_ANONYMOUSES_LOGIN=yes
        networks:
            - commerce-network
    kafka:
        image: confluentinc/cp-kafka:7.5.0
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        networks:
            - commerce-network

    auth-microservice:
        build: 
            context: .
            dockerfile: ./auth-microservice/Dockerfile
        container_name: auth_microservice_container
        depends_on:
            - users-microservice
            - ms-libs
        env_file:
            - .env
        volumes:
            - ./auth-microservice:/usr/src/app/auth-microservice
            - /usr/src/app/auth-microservice/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network

    cart-microservice:
        build:
            context: .
            dockerfile: ./cart-microservice/Dockerfile
        container_name: cart_microservice_container
        depends_on:
            - cart-mongo-db
            - ms-libs
        env_file:
            - .env
        volumes:
            - ./cart-microservice:/usr/src/app/cart-microservice
            - /usr/src/app/cart-microservice/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network  

    notifications-microservice:
        build:
            context: .
            dockerfile: ./notifications-microservice/Dockerfile
        container_name: notifications_microservice_container
        depends_on:
            - kafka
        env_file:
            - .env
        volumes:
            - ./notifications-microservice:/usr/src/app/notifications-microservice
            - /usr/src/app/notifications-microservice/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network 

    products-microservice:
        build: 
            context: .
            dockerfile: ./products-microservice/Dockerfile
        container_name: products_microservice_container
        depends_on:
            - products-pg-db
            - ms-libs
        env_file:
            - .env
        volumes:
            - ./products-microservice:/usr/src/app/products-microservice
            - /usr/src/app/products-microservice/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network

    orders-microservice:
        build:
            context: .
            dockerfile: ./orders-microservice/Dockerfile
        container_name: orders_microservice_container
        depends_on:
            - orders-pg-db
            - ms-libs
        env_file:
            - .env
        volumes:
            - ./orders-microservice:/usr/src/app/orders-microservice
            - /usr/src/app/orders-microservice/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network

    shipping-microservice:
        build:
            context: .
            dockerfile: ./shipping-microservice/Dockerfile
        container_name: shipping_microservice_container
        depends_on:
            - kafka
            - shipping-mongo-db
        env_file:
            - .env
        volumes:
            - ./shipping-microservice:/usr/src/app/shipping-microservice
            - /usr/src/app/shipping-microservice/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network

    # Kafka Consumer: Listens to 'order_created' events
    # Kafka Producer: Emits 'stock_warning' and 'stock_error' events
    # TCP Client: Sends 'Products.DecreaseStock' command to products-microservice
    stock-microservice:
        build:
            context: .
            dockerfile: ./stock-microservice/Dockerfile
        container_name: stock_microservice_container
        depends_on:
            - kafka
            - products-pg-db
        env_file:
            - .env
        volumes:
            - ./stock-microservice:/usr/src/app/stock-microservice
            - /usr/src/app/stock-microservice/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network

    users-microservice:
        build: 
            context: .
            dockerfile: ./users-microservice/Dockerfile
        container_name: users_microservice_container
        depends_on:
            - users-pg-db
            - ms-libs
        env_file:
            - .env
        volumes:
            - ./users-microservice:/usr/src/app/users-microservice
            - /usr/src/app/users-microservice/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network
        
    api-gateway:
        build: 
            context: .
            dockerfile: ./api-gateway/Dockerfile
        container_name: api_gateway_container
        depends_on:
            - auth-microservice
            - products-microservice
            - orders-microservice
            - cart-microservice
            - ms-libs
            - shipping-microservice
            - users-microservice
        env_file:
            - .env
        volumes:
            - ./api-gateway:/usr/src/app/api-gateway
            - /usr/src/app/api-gateway/node_modules
            - ms-libs-dist:/usr/src/app/libs/dist
            - ms-libs-modules:/usr/src/app/libs/node_modules
        restart: unless-stopped
        networks:
            - commerce-network
        ports:
            - '3000:3000'

    ms-libs:
        build:
            context: ./libs
            dockerfile: Dockerfile
        volumes:
            - ms-libs-dist:/usr/src/app/dist 
            - ms-libs-modules:/usr/src/app/node_modules

volumes:
    pgadmin_data:
    node_modules:
    cart-mongo-data:
    users-pg-data:
    products-pg-data:   
    orders-pg-data: 
    shipping-mongo-data:
    ms-libs-dist:
    ms-libs-modules:

networks:
    commerce-network:
        driver: bridge
